name: investtrack
description: "InvestTrack is a cross-platform Flutter application that helps 
users track their stock portfolios in real-time. It fetches live stock prices, 
displays investment performance, and calculates gains or losses in multiple 
currencies. The app is primarily designed for Web, iOS, and Android, but it 
includes support for Linux, macOS, and Windows, with potential for future 
testing and official support on these platforms. Perfect for anyone looking to 
monitor their investments on the go."

# The following line prevents the package from being accidentally published to
# pub.dev using `flutter pub publish`. This is preferred for private packages.
publish_to: 'none' # Remove this line if you wish to publish to pub.dev

# The following defines the version and build number for your application.
# A version number is three numbers separated by dots, like 1.2.43
# followed by an optional build number separated by a +.
# Both the version and the builder number may be overridden in flutter
# build by specifying --build-name and --build-number, respectively.
# In Android, build-name is used as versionName while build-number used as
# versionCode.
# Read more about Android versioning at
# https://developer.android.com/studio/publish/versioning
# In iOS, build-name is used as CFBundleShortVersionString while build-number
# is used as CFBundleVersion.
# Read more about iOS versioning at
# https://developer.apple.com/library/archive/documentation/General/Reference/InfoPlistKeyReference/Articles/CoreFoundationKeys.html
# In Windows, build-name is used as the major, minor, and patch parts
# of the product and file versions while build-number is used as the build
# suffix.
version: 1.0.9+9

environment:
  sdk: '>=3.8.0 <4.0.0'

# Dependencies specify other packages that your package needs in order to work.
# To automatically upgrade your package dependencies to the latest versions
# consider running `flutter pub upgrade --major-versions`. Alternatively,
# dependencies can be manually updated by changing the version numbers below to
# the latest version available on pub.dev. To see which dependencies have newer
# versions available, run `flutter pub outdated`.
dependencies:
  animated_text_kit: ^4.2.3
  authentication_repository:
    path: core/repositories/authentication_repository
  bloc: ^9.0.0
  bloc_test: ^10.0.0
  clerk_auth: ^0.0.12-beta
  collection: ^1.19.1
  dio: ^5.9.0
  equatable: ^2.0.7
  feedback: ^3.2.0
  flutter:
    sdk: flutter
  flutter_bloc: ^9.1.1
  flutter_email_sender: ^7.0.0
  flutter_localizations:
    sdk: flutter
  flutter_markdown: ^0.7.7+1
  flutter_translate: ^4.1.0
  formz: ^0.8.0
  get_it: ^8.2.0
  injectable: ^2.5.1
  injectable_generator: ^2.8.1
  #  Tried 0.20.2, did not compile.
  intl: ^0.19.0
  json_annotation: ^4.9.0
  # Tried 1.17.0, did not compile.
  meta: ^1.16.0
  mockito: ^5.5.0
  models:
    path: core/models
  nested: ^1.0.0
  package_info_plus: ^8.3.1
  path_provider: ^2.1.5
  retrofit: ^4.7.1
  retrofit_generator: ^10.0.2
  shared_preferences: ^2.5.3
  shimmer: ^3.0.0
  url_launcher: ^6.3.2
  url_launcher_android: ^6.3.17
  user_repository:
    path: core/repositories/user_repository
  yahoo_finance_data_reader: ^1.0.12

dependency_overrides:
  #  I have tried the 0.20.2, but it does not let me upgrade.
  intl: ^0.19.0
  # Tried ^3.0.0, did not compile.
  source_gen: any

dev_dependencies:
  # Tried ^2.6.0, could not compile.
  build_runner: any
  # The "flutter_lints" package below contains a set of recommended lints to
  # encourage good coding practices. The lint set provided by the package is
  # activated in the `analysis_options.yaml` file located at the root of your
  # package. See that file for information about deactivating specific lint
  # rules and activating additional ones.
  flutter_lints: ^6.0.0
  flutter_test:
    sdk: flutter
  # Tried ^6.10.0 did not compile.
  json_serializable: any

# For information on the generic Dart part of this file, see the
# following page: https://dart.dev/tools/pub/pubspec

# The following section is specific to Flutter packages.
flutter:

  # The following line ensures that the Material Icons font is
  # included with your application, so that you can use the icons in
  # the material Icons class.
  uses-material-design: true

  # Assets of the application.
  assets:
    # strings
    - assets/i18n/
    - assets/images/

  # An image asset can refer to one or more resolution-specific "variants", see
  # https://flutter.dev/to/resolution-aware-images

  # For details regarding adding assets from package dependencies, see
  # https://flutter.dev/to/asset-from-package

  # To add custom fonts to your application, add a fonts section here,
  # in this "flutter" section. Each entry in this list should have a
  # "family" key with the font family name, and a "fonts" key with a
  # list giving the asset and other descriptors for the font. For
  # example:
  # fonts:
  #   - family: Schyler
  #     fonts:
  #       - asset: fonts/Schyler-Regular.ttf
  #       - asset: fonts/Schyler-Italic.ttf
  #         style: italic
  #   - family: Trajan Pro
  #     fonts:
  #       - asset: fonts/TrajanPro.ttf
  #       - asset: fonts/TrajanPro_Bold.ttf
  #         weight: 700
  #
  # For details regarding fonts from package dependencies,
  # see https://flutter.dev/to/font-from-package
